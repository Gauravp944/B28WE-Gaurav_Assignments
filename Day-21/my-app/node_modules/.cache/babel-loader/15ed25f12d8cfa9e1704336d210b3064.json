{"ast":null,"code":"import './App.css';\nimport Card from \"./components/card\"; // function App() {\n//   // const names = [\"Gaurav\", \"Priti\", \"Prakash\", \"Robin\"];\n//   // creating array of object\n//   // const users = [\n//   //   // {\n//   //   //   name: \"Gaurav\", \n//   //   //   photo: \"https://pbs.twimg.com/profile_images/959291281246642177/52oOzHVF_400x400.jpg\",\n//   //   //   description : \"Lorem\"\n//   //   // },\n//   // ]\n//   const movie = [\n//     {\n//       name: \"The Avengers\",\n//       rating: \"10\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"6\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"4\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"8\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     }\n//   ]\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <Msg name=\"Gaurav\"/>\n//         <Msg name=\"Priti\"/>\n//         <Msg name=\"Prakash\"/> */}\n//         {/* {names.map(nm => <Msg name={nm}/>)} */}\n//         {/* {users.map((ur) => (<Msg name={ur.name} photo={ur.photo} description={ur.description}/>))} */}\n//         <section className = \"movie-list\">\n//           {\n//             movie.map(({name, rating, summary, poster}) => (\n//               <Movie\n//                 name = {name}\n//                 rating = {rating}\n//                 summary = {summary}\n//                 poster = {poster}\n//               />\n//             ))\n//           }\n//         </section>\n//       </header>\n//     </div>\n//   );\n//   // // function Msg(props) {\n//   // //   // console.log(props)\n//   // //   return(\n//   // //     <div>\n//   // //       <h1>Hellow, {props.name}!!!</h1>\n//   // //     </div>\n//   // //   ) ; \n//   // // }\n//   // function Msg({name, photo, description}) {\n//   //   return(\n//   //     <div>\n//   //       <img \n//   //         className=\"user-photo\" \n//   //         src={photo}\n//   //         alt={name}\n//   //       />\n//   //       <h1>{name}</h1>\n//   //       <p>{description}</p>\n//   //     </div>\n//   //   ) ; \n//   // }\n//   function Movie({name, rating, summary, poster}) {\n//     const styles ={\n//       color: rating < 8 ? \"crimson\" : \"green\",\n//       fontWeight: \"bold\"\n//     }\n//     let summarystyles ={\n//       color: rating < 0 ? \"crimson\" : \"green\"\n//     }\n//     const [d, setDisplay] = useState(\"movie-summary\");\n//     const [btn, Button_Name] = useState(\"Hide summary\");\n//     const [t_val, Toggle] = useState(0);\n//     return(\n//       <div className = \"movie-container\">\n//         <img src={poster} alt={name} className = \"movie-poster\" />\n//         <div className = \"movie-specs\">\n//           <h3 className = \"movie-name\">{name}</h3>\n//           <p className = \"movie-rating\" style={styles}>{rating}</p>\n//         </div>\n//         <button onClick={()=> {\n//           if(t_val==0){\n//           setDisplay(\"summary_change\");\n//           Button_Name(\"Show Summary\");\n//           Toggle(1);\n//           } \n//           else{\n//          setDisplay(\"movie-summary\");\n//           Button_Name(\"Hide summary\");\n//           Toggle(0);\n//           }\n//         }}>{btn}</button>\n//         <p className={d}>{summary}</p>\n//         <Counter />\n//       </div>\n//     )\n//   }\n//   // hook is a function - starts with 'use' keyword\n//   function Counter() {\n//     // let like = 10;\n//     // const [state, setState] = useState(InitialValue);\n//     // state - current scenario - current data\n//     // state - imp variable; setstate - React state is changed - re-render\n//     // re-render  - updating your component\n//     // button click - onClick => set like =>infrom react like is changed\n//     const [like, setLike] = useState(5);\n//     const [dislike, setDislike] = useState(10);\n//     return(\n//       <div className = \"counter-container\">\n//         <button className = \"likes-dislikes\" onClick = {() => \n//           {\n//             setLike(like + 1); // react will re-render the view\n//           }\n//         }>üëç{like}</button>\n//         <button className = \"likes-dislikes\" onClick = {() => \n//           {\n//             setDislike(dislike + 1); \n//           }\n//         }>üëé{dislike}</button>\n//       </div>\n//     )\n//   }\n// }\n\nconst products = [{\n  title: 'FREE',\n  price: '0',\n  checked: ['Single User', '5GB Storage', 'Unlimited Public Projects', 'Community Access'],\n  crossed: ['Unlimited Private Projects', 'Dedicated Phone Support', 'Free Subdomain', 'Monthly Status Reports']\n}, {\n  title: '',\n  price: '',\n  checked: ['5 Users', '50GB Storage', 'Unlimited Public Projects', 'Community Access', 'Unlimited Private Projects', 'Dedicated Phone Support', 'Free Subdomain'],\n  crossed: ['Monthly Status Reports']\n}, {\n  title: '',\n  price: '',\n  checked: ['Unlimited Users', '150GB Storage', 'Unlimited Public Projects', 'Community Access', 'Unlimited Private Projects', 'Dedicated Phone Support', 'Unlimited Free Subdomains', 'Monthly Status Reports']\n}];\nexport default App;","map":{"version":3,"sources":["C:/Users/91845/OneDrive/Desktop/B28WD/Day-27/my-app/src/App.js"],"names":["Card","products","title","price","checked","crossed","App"],"mappings":"AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,mBAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAG,MADV;AAEEC,EAAAA,KAAK,EAAG,GAFV;AAGEC,EAAAA,OAAO,EAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,2BAA/B,EAA4D,kBAA5D,CAHZ;AAIEC,EAAAA,OAAO,EAAG,CAAC,4BAAD,EAA+B,yBAA/B,EAA0D,gBAA1D,EAA4E,wBAA5E;AAJZ,CADe,EAOf;AACEH,EAAAA,KAAK,EAAG,EADV;AAEEC,EAAAA,KAAK,EAAG,EAFV;AAGEC,EAAAA,OAAO,EAAG,CAAC,SAAD,EAAY,cAAZ,EAA4B,2BAA5B,EAAyD,kBAAzD,EAA4E,4BAA5E,EAA0G,yBAA1G,EAAqI,gBAArI,CAHZ;AAIEC,EAAAA,OAAO,EAAG,CAAC,wBAAD;AAJZ,CAPe,EAaf;AACEH,EAAAA,KAAK,EAAG,EADV;AAEEC,EAAAA,KAAK,EAAG,EAFV;AAGEC,EAAAA,OAAO,EAAG,CAAC,iBAAD,EAAoB,eAApB,EAAqC,2BAArC,EAAkE,kBAAlE,EAAqF,4BAArF,EAAmH,yBAAnH,EAA8I,2BAA9I,EAA2K,wBAA3K;AAHZ,CAbe,CAAjB;AAuBA,eAAeE,GAAf","sourcesContent":["import './App.css';\nimport Card from \"./components/card\"\n\n// function App() {\n//   // const names = [\"Gaurav\", \"Priti\", \"Prakash\", \"Robin\"];\n//   // creating array of object\n//   // const users = [\n//   //   // {\n//   //   //   name: \"Gaurav\", \n//   //   //   photo: \"https://pbs.twimg.com/profile_images/959291281246642177/52oOzHVF_400x400.jpg\",\n//   //   //   description : \"Lorem\"\n//   //   // },\n//   // ]\n//   const movie = [\n//     {\n//       name: \"The Avengers\",\n//       rating: \"10\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"6\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"4\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     },\n//     {\n//       name: \"The Avengers\",\n//       rating: \"8\",\n//       summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n//       poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n//     }\n//   ]\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <Msg name=\"Gaurav\"/>\n//         <Msg name=\"Priti\"/>\n//         <Msg name=\"Prakash\"/> */}\n//         {/* {names.map(nm => <Msg name={nm}/>)} */}\n//         {/* {users.map((ur) => (<Msg name={ur.name} photo={ur.photo} description={ur.description}/>))} */}\n\n//         <section className = \"movie-list\">\n//           {\n//             movie.map(({name, rating, summary, poster}) => (\n//               <Movie\n//                 name = {name}\n//                 rating = {rating}\n//                 summary = {summary}\n//                 poster = {poster}\n//               />\n//             ))\n//           }\n//         </section>\n\n        \n\n//       </header>\n//     </div>\n//   );\n//   // // function Msg(props) {\n//   // //   // console.log(props)\n//   // //   return(\n//   // //     <div>\n//   // //       <h1>Hellow, {props.name}!!!</h1>\n//   // //     </div>\n//   // //   ) ; \n//   // // }\n//   // function Msg({name, photo, description}) {\n//   //   return(\n//   //     <div>\n//   //       <img \n//   //         className=\"user-photo\" \n//   //         src={photo}\n//   //         alt={name}\n//   //       />\n//   //       <h1>{name}</h1>\n//   //       <p>{description}</p>\n//   //     </div>\n//   //   ) ; \n//   // }\n//   function Movie({name, rating, summary, poster}) {\n//     const styles ={\n//       color: rating < 8 ? \"crimson\" : \"green\",\n//       fontWeight: \"bold\"\n//     }\n//     let summarystyles ={\n//       color: rating < 0 ? \"crimson\" : \"green\"\n      \n//     }\n\n    \n\n    \n\n//     const [d, setDisplay] = useState(\"movie-summary\");\n//     const [btn, Button_Name] = useState(\"Hide summary\");\n//     const [t_val, Toggle] = useState(0);\n\n//     return(\n//       <div className = \"movie-container\">\n//         <img src={poster} alt={name} className = \"movie-poster\" />\n//         <div className = \"movie-specs\">\n//           <h3 className = \"movie-name\">{name}</h3>\n//           <p className = \"movie-rating\" style={styles}>{rating}</p>\n//         </div>\n\n        \n\n//         <button onClick={()=> {\n          \n//           if(t_val==0){\n\n//           setDisplay(\"summary_change\");\n//           Button_Name(\"Show Summary\");\n//           Toggle(1);\n//           } \n          \n//           else{\n          \n//          setDisplay(\"movie-summary\");\n//           Button_Name(\"Hide summary\");\n//           Toggle(0);\n//           }\n\n//         }}>{btn}</button>\n        \n//         <p className={d}>{summary}</p>\n//         <Counter />\n//       </div>\n//     )\n//   }\n\n//   // hook is a function - starts with 'use' keyword\n//   function Counter() {\n//     // let like = 10;\n//     // const [state, setState] = useState(InitialValue);\n//     // state - current scenario - current data\n//     // state - imp variable; setstate - React state is changed - re-render\n//     // re-render  - updating your component\n\n//     // button click - onClick => set like =>infrom react like is changed\n//     const [like, setLike] = useState(5);\n//     const [dislike, setDislike] = useState(10);\n//     return(\n//       <div className = \"counter-container\">\n//         <button className = \"likes-dislikes\" onClick = {() => \n//           {\n//             setLike(like + 1); // react will re-render the view\n//           }\n//         }>üëç{like}</button>\n//         <button className = \"likes-dislikes\" onClick = {() => \n//           {\n//             setDislike(dislike + 1); \n//           }\n//         }>üëé{dislike}</button>\n//       </div>\n//     )\n//   }\n// }\n\nconst products = [\n  {\n    title : 'FREE',\n    price : '0',\n    checked : ['Single User', '5GB Storage', 'Unlimited Public Projects', 'Community Access'],\n    crossed : ['Unlimited Private Projects', 'Dedicated Phone Support', 'Free Subdomain', 'Monthly Status Reports']\n  },\n  {\n    title : '',\n    price : '',\n    checked : ['5 Users', '50GB Storage', 'Unlimited Public Projects', 'Community Access','Unlimited Private Projects', 'Dedicated Phone Support', 'Free Subdomain'],\n    crossed : ['Monthly Status Reports']\n  },\n  {\n    title : '',\n    price : '',\n    checked : ['Unlimited Users', '150GB Storage', 'Unlimited Public Projects', 'Community Access','Unlimited Private Projects', 'Dedicated Phone Support', 'Unlimited Free Subdomains', 'Monthly Status Reports']\n  }\n]\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}