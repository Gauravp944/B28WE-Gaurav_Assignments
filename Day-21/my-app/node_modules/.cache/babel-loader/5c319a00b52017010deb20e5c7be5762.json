{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91845\\\\OneDrive\\\\Desktop\\\\B28WD\\\\Day-27\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  // const names = [\"Gaurav\", \"Priti\", \"Prakash\", \"Robin\"];\n  // creating array of object\n  // const users = [\n  //   // {\n  //   //   name: \"Gaurav\", \n  //   //   photo: \"https://pbs.twimg.com/profile_images/959291281246642177/52oOzHVF_400x400.jpg\",\n  //   //   description : \"Lorem\"\n  //   // },\n  // ]\n  const movie = [{\n    name: \"The Avengers\",\n    rating: \"10\",\n    summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n    poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\"\n  }, {\n    name: \"The Avengers\",\n    rating: \"6\",\n    summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n    poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\"\n  }, {\n    name: \"The Avengers\",\n    rating: \"4\",\n    summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n    poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\"\n  }, {\n    name: \"The Avengers\",\n    rating: \"8\",\n    summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n    poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"movie-list\",\n        children: movie.map(_ref => {\n          let {\n            name,\n            rating,\n            summary,\n            poster\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            name: name,\n            rating: rating,\n            summary: summary,\n            poster: poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this); // // function Msg(props) {\n  // //   // console.log(props)\n  // //   return(\n  // //     <div>\n  // //       <h1>Hellow, {props.name}!!!</h1>\n  // //     </div>\n  // //   ) ; \n  // // }\n  // function Msg({name, photo, description}) {\n  //   return(\n  //     <div>\n  //       <img \n  //         className=\"user-photo\" \n  //         src={photo}\n  //         alt={name}\n  //       />\n  //       <h1>{name}</h1>\n  //       <p>{description}</p>\n  //     </div>\n  //   ) ; \n  // }\n\n  function Movie(_ref2) {\n    _s();\n\n    let {\n      name,\n      rating,\n      summary,\n      poster\n    } = _ref2;\n    const styles = {\n      color: rating < 8 ? \"crimson\" : \"green\",\n      fontWeight: \"bold\"\n    };\n    let summarystyles = {\n      color: rating < 0 ? \"crimson\" : \"green\"\n    };\n    const [d, setDisplay] = useState(\"movie-summary\");\n    const [btn, Button_Name] = useState(\"Hide summary\");\n    const [t_val, Toggle] = useState(0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: name,\n        className: \"movie-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-specs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"movie-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-rating\",\n          style: styles,\n          children: rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (t_val == 0) {\n            setDisplay(\"summary_change\");\n            Button_Name(\"Show Summary\");\n            Toggle(1);\n          } else {\n            setDisplay(\"movie-summary\");\n            Button_Name(\"Hide summary\");\n            Toggle(0);\n          }\n        },\n        children: btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: d,\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  } // hook is a function - starts with 'use' keyword\n\n\n  _s(Movie, \"9DEVAISC08/B8yzoFWrKDmU5pxg=\");\n\n  function Counter() {\n    _s2();\n\n    // let like = 10;\n    // const [state, setState] = useState(InitialValue);\n    // state - current scenario - current data\n    // state - imp variable; setstate - React state is changed - re-render\n    // re-render  - updating your component\n    // button click - onClick => set like =>infrom react like is changed\n    const [like, setLike] = useState(5);\n    const [dislike, setDislike] = useState(10);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes-dislikes\",\n        onClick: () => {\n          setLike(like + 1); // react will re-render the view\n        },\n        children: [\"\\uD83D\\uDC4D\", like]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"likes-dislikes\",\n        onClick: () => {\n          setDislike(dislike + 1);\n        },\n        children: [\"\\uD83D\\uDC4E\", dislike]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(Counter, \"8i5SSmBiIy4sCAKXBxZxZGzDbh0=\");\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/91845/OneDrive/Desktop/B28WD/Day-27/my-app/src/App.js"],"names":["logo","useState","App","movie","name","rating","summary","poster","map","Movie","styles","color","fontWeight","summarystyles","d","setDisplay","btn","Button_Name","t_val","Toggle","Counter","like","setLike","dislike","setDislike"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n  // const names = [\"Gaurav\", \"Priti\", \"Prakash\", \"Robin\"];\n  // creating array of object\n  // const users = [\n  //   // {\n  //   //   name: \"Gaurav\", \n  //   //   photo: \"https://pbs.twimg.com/profile_images/959291281246642177/52oOzHVF_400x400.jpg\",\n  //   //   description : \"Lorem\"\n  //   // },\n  // ]\n  const movie = [\n    {\n      name: \"The Avengers\",\n      rating: \"10\",\n      summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n      poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n    },\n    {\n      name: \"The Avengers\",\n      rating: \"6\",\n      summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n      poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n    },\n    {\n      name: \"The Avengers\",\n      rating: \"4\",\n      summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n      poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n    },\n    {\n      name: \"The Avengers\",\n      rating: \"8\",\n      summary: \"When Thor's evil brother, Loki (Tom Hiddleston), gains access to the unlimited power of the energy cube called the Tesseract, Nick Fury (Samuel L. Jackson), director of S.H.I.E.L.D., initiates a superhero recruitment effort to defeat the unprecedented threat to Earth. Joining Fury's dream team are Iron Man (Robert Downey Jr.), Captain America (Chris Evans), the Hulk (Mark Ruffalo), Thor (Chris Hemsworth), the Black Widow (Scarlett Johansson) and Hawkeye (Jeremy Renner).\",\n      poster: \"https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg\",\n    }\n  ]\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <Msg name=\"Gaurav\"/>\n        <Msg name=\"Priti\"/>\n        <Msg name=\"Prakash\"/> */}\n        {/* {names.map(nm => <Msg name={nm}/>)} */}\n        {/* {users.map((ur) => (<Msg name={ur.name} photo={ur.photo} description={ur.description}/>))} */}\n\n        <section className = \"movie-list\">\n          {\n            movie.map(({name, rating, summary, poster}) => (\n              <Movie\n                name = {name}\n                rating = {rating}\n                summary = {summary}\n                poster = {poster}\n              />\n            ))\n          }\n        </section>\n\n        \n\n      </header>\n    </div>\n  );\n  // // function Msg(props) {\n  // //   // console.log(props)\n  // //   return(\n  // //     <div>\n  // //       <h1>Hellow, {props.name}!!!</h1>\n  // //     </div>\n  // //   ) ; \n  // // }\n  // function Msg({name, photo, description}) {\n  //   return(\n  //     <div>\n  //       <img \n  //         className=\"user-photo\" \n  //         src={photo}\n  //         alt={name}\n  //       />\n  //       <h1>{name}</h1>\n  //       <p>{description}</p>\n  //     </div>\n  //   ) ; \n  // }\n  function Movie({name, rating, summary, poster}) {\n    const styles ={\n      color: rating < 8 ? \"crimson\" : \"green\",\n      fontWeight: \"bold\"\n    }\n    let summarystyles ={\n      color: rating < 0 ? \"crimson\" : \"green\"\n      \n    }\n\n    \n\n    \n\n    const [d, setDisplay] = useState(\"movie-summary\");\n    const [btn, Button_Name] = useState(\"Hide summary\");\n    const [t_val, Toggle] = useState(0);\n\n    return(\n      <div className = \"movie-container\">\n        <img src={poster} alt={name} className = \"movie-poster\" />\n        <div className = \"movie-specs\">\n          <h3 className = \"movie-name\">{name}</h3>\n          <p className = \"movie-rating\" style={styles}>{rating}</p>\n        </div>\n\n        \n\n        <button onClick={()=> {\n          \n          if(t_val==0){\n\n          setDisplay(\"summary_change\");\n          Button_Name(\"Show Summary\");\n          Toggle(1);\n          } \n          \n          else{\n          \n         setDisplay(\"movie-summary\");\n          Button_Name(\"Hide summary\");\n          Toggle(0);\n          }\n\n        }}>{btn}</button>\n        \n        <p className={d}>{summary}</p>\n        <Counter />\n      </div>\n    )\n  }\n\n  // hook is a function - starts with 'use' keyword\n  function Counter() {\n    // let like = 10;\n    // const [state, setState] = useState(InitialValue);\n    // state - current scenario - current data\n    // state - imp variable; setstate - React state is changed - re-render\n    // re-render  - updating your component\n\n    // button click - onClick => set like =>infrom react like is changed\n    const [like, setLike] = useState(5);\n    const [dislike, setDislike] = useState(10);\n    return(\n      <div className = \"counter-container\">\n        <button className = \"likes-dislikes\" onClick = {() => \n          {\n            setLike(like + 1); // react will re-render the view\n          }\n        }>👍{like}</button>\n        <button className = \"likes-dislikes\" onClick = {() => \n          {\n            setDislike(dislike + 1); \n          }\n        }>👎{dislike}</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}